---
import SubNav, { type SubNavItems } from "@/components/SubNav.astro"
import ToC, { type ToCHeadingsType } from "@/components/ToC.astro"
import Breadcrumb from "@/components/ui/Breadcrumb.astro"
import BaseLayout from "./BaseLayout.astro"
import { getCollection, type CollectionEntry } from "astro:content"
import { collections } from "@/content/config"

type PageNavConfig = {
  path: string
  newBadge?: (page: any) => { label: string; variant: string } | null
}

type CollectionKeys = keyof typeof collections

const pageCollectionsConfig: Record<CollectionKeys, PageNavConfig> = {
  general: { path: "/playground" },
  components: {
    path: "/playground/components",
    newBadge: (page: any) => page.data.isNew ? { label: "New", variant: "secondary" } : null
  },
  tools: { path: "/playground/tools" }
} as const

const getNavItems = async (collectionName: CollectionKeys) => {
  const config = pageCollectionsConfig[collectionName]
  const pages = await getCollection(collectionName)

  return pages.map((page) => {
    if (page.data.isPrivate) return null

    return {
      type: "item" as const,
      href: `${config.path}/${page.slug}`,
      text: page.data.title,
      ...(config.newBadge ? { badge: config.newBadge(page) } : {})
    }
  })
}

const navItems = [
  { type: "heading", text: "About" },
  ...(await getNavItems("general")),
  { type: "heading", text: "Components" },
  ...(await getNavItems("components")),
  { type: "heading", text: "Tools" },
  ...(await getNavItems("tools"))
]

interface Props {
  frontmatter?: Record<string, string>
  title: string
  description: string
  headings?: ToCHeadingsType
}

const {
  frontmatter,
  title = frontmatter?.title,
  description = frontmatter?.description,
  headings,
} = Astro.props
---

<BaseLayout title={title} description={description}>
  <div
    class="container flex-1 pt-6 pb-20 items-start md:grid lg:grid-cols-[240px_minmax(0,1fr)] lg:gap-10"
  >
    <SubNav navItems={navItems as SubNavItems} />
    <div class="relative lg:grid grid-cols-full xl:grid-cols-[1fr_300px]">
      <div class="mx-auto w-full min-w-0">
        <Breadcrumb homeOverridePath="/playground" ignorePaths={["playground"]} />
        <article
          class="prose prose-h2:border-b prose-h2:pb-2 prose-headings:scroll-m-20 prose-headings:tracking-tight prose-h1:text-3xl prose-headings:font-bold prose-h1:mb-0 dark:prose-invert mt-4"
        >
          <slot />
        </article>
      </div>
      <ToC headings={headings} excludeTitle class="hidden xl:block" />
    </div>
  </div>
</BaseLayout>
